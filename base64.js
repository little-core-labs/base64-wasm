
module.exports = loadWebAssembly

loadWebAssembly.supported = typeof WebAssembly !== 'undefined'

function loadWebAssembly (opts) {
  if (!loadWebAssembly.supported) return null

  var imp = opts && opts.imports
  var wasm = toUint8Array('AGFzbQEAAAABGwVgA39/fwF/YAJ/fwBgAABgAX8Bf2ACf38BfwIPAQNlbnYGbWVtb3J5AgACAwoJAgAAAAEAAwEEBjcJfwFB0IgEC38AQcAIC38AQcQIC38AQYAIC38AQcgIC38AQYAIC38AQdCIBAt/AEEAC38AQQELB6oCERFfX3dhc21fY2FsbF9jdG9ycwAADWJhc2U2NF9kZWNvZGUAAxNiYXNlNjRfZGVjb2RlX2Jsb2NrAAQNYmFzZTY0X2VuY29kZQAFFmJhc2U2NF9lbmNvZGluZ19sZW5ndGgABhNiYXNlNjRfZW5jb2RlX2Jsb2NrAAcWYmFzZTY0X2RlY29kaW5nX2xlbmd0aAAIFV9fenpfc3ltYm9sX25hbWVzX2xlbgMBEV9fenpfc3ltYm9sX25hbWVzAwIGbWVtY3B5AAIGbWVtc2V0AAEMX19kc29faGFuZGxlAwMKX19kYXRhX2VuZAMEDV9fZ2xvYmFsX2Jhc2UDBQtfX2hlYXBfYmFzZQMGDV9fbWVtb3J5X2Jhc2UDBwxfX3RhYmxlX2Jhc2UDCAqKHAkDAAEL/AICAn8BfgJAIAJFDQAgACABOgAAIAAgAmoiA0F/aiABOgAAIAJBA0kNACAAIAE6AAIgACABOgABIANBfWogAToAACADQX5qIAE6AAAgAkEHSQ0AIAAgAToAAyADQXxqIAE6AAAgAkEJSQ0AIABBACAAa0EDcSIEaiIDIAFB/wFxQYGChAhsIgE2AgAgAyACIARrQXxxIgRqIgJBfGogATYCACAEQQlJDQAgAyABNgIIIAMgATYCBCACQXhqIAE2AgAgAkF0aiABNgIAIARBGUkNACADIAE2AhggAyABNgIUIAMgATYCECADIAE2AgwgAkFwaiABNgIAIAJBbGogATYCACACQWhqIAE2AgAgAkFkaiABNgIAIAQgA0EEcUEYciIEayICQSBJDQAgAa0iBUIghiAFhCEFIAMgBGohAQNAIAEgBTcDACABQRhqIAU3AwAgAUEQaiAFNwMAIAFBCGogBTcDACABQSBqIQEgAkFgaiICQR9LDQALCyAAC5ALAQh/AkAgAkUgAUEDcUVyRQRAIAAhAwNAIAMgAS0AADoAACACQX9qIQQgA0EBaiEDIAFBAWohASACQQFGDQIgBCECIAFBA3ENAAsMAQsgAiEEIAAhAwsCQCADQQNxIgJFBEACQCAEQRBJBEAgBCECDAELIARBcGohAgNAIAMgASgCADYCACADQQRqIAFBBGooAgA2AgAgA0EIaiABQQhqKAIANgIAIANBDGogAUEMaigCADYCACADQRBqIQMgAUEQaiEBIARBcGoiBEEPSw0ACwsgAkEIcQRAIAMgASkCADcCACADQQhqIQMgAUEIaiEBCyACQQRxBEAgAyABKAIANgIAIANBBGohAyABQQRqIQELIAJBAnEEQCADIAEtAAA6AAAgAyABLQABOgABIANBAmohAyABQQJqIQELIAJBAXFFDQEgAyABLQAAOgAAIAAPCwJAIARBIEkNACACQX9qIgJBAksNAAJAAkACQCACQQFrDgIBAgALIAMgAS0AAToAASADIAEoAgAiBToAACADIAEtAAI6AAIgBEF9aiEIIANBA2ohCSAEQWxqQXBxIQpBACECA0AgAiAJaiIDIAEgAmoiBkEEaigCACIHQQh0IAVBGHZyNgIAIANBBGogBkEIaigCACIFQQh0IAdBGHZyNgIAIANBCGogBkEMaigCACIHQQh0IAVBGHZyNgIAIANBDGogBkEQaigCACIFQQh0IAdBGHZyNgIAIAJBEGohAiAIQXBqIghBEEsNAAsgAiAJaiEDIAEgAmpBA2ohASAEIAprQW1qIQQMAgsgAyABKAIAIgU6AAAgAyABLQABOgABIARBfmohCCADQQJqIQkgBEFsakFwcSEKQQAhAgNAIAIgCWoiAyABIAJqIgZBBGooAgAiB0EQdCAFQRB2cjYCACADQQRqIAZBCGooAgAiBUEQdCAHQRB2cjYCACADQQhqIAZBDGooAgAiB0EQdCAFQRB2cjYCACADQQxqIAZBEGooAgAiBUEQdCAHQRB2cjYCACACQRBqIQIgCEFwaiIIQRFLDQALIAIgCWohAyABIAJqQQJqIQEgBCAKa0FuaiEEDAELIAMgASgCACIFOgAAIARBf2ohCCADQQFqIQkgBEFsakFwcSEKQQAhAgNAIAIgCWoiAyABIAJqIgZBBGooAgAiB0EYdCAFQQh2cjYCACADQQRqIAZBCGooAgAiBUEYdCAHQQh2cjYCACADQQhqIAZBDGooAgAiB0EYdCAFQQh2cjYCACADQQxqIAZBEGooAgAiBUEYdCAHQQh2cjYCACACQRBqIQIg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')
  var ready = null

  var mod = {
    buffer: wasm,
    memory: null,
    exports: null,
    realloc: realloc,
    onload: onload
  }

  onload(function () {})

  return mod

  function realloc (size) {
    mod.exports.memory.grow(Math.max(0, Math.ceil(Math.abs(size - mod.memory.length) / 65536)))
    mod.memory = new Uint8Array(mod.exports.memory.buffer)
  }

  function onload (cb) {
    if (mod.exports) return cb()

    if (ready) {
      ready.then(cb.bind(null, null)).catch(cb)
      return
    }

    try {
      if (opts && opts.async) throw new Error('async')
      setup({instance: new WebAssembly.Instance(new WebAssembly.Module(wasm), imp)})
    } catch (err) {
      ready = WebAssembly.instantiate(wasm, imp).then(setup)
    }

    onload(cb)
  }

  function setup (w) {
    mod.exports = w.instance.exports
    mod.memory = mod.exports.memory && mod.exports.memory.buffer && new Uint8Array(mod.exports.memory.buffer)
  }
}

function toUint8Array (s) {
  if (typeof atob === 'function') return new Uint8Array(atob(s).split('').map(charCodeAt))
  return (require('buf' + 'fer').Buffer).from(s, 'base64')
}

function charCodeAt (c) {
  return c.charCodeAt(0)
}
